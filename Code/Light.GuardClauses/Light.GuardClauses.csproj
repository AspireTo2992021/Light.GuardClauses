<Project Sdk="MSBuild.Sdk.Extras/1.6.46">

  <Import Project="TargetFrameworks.props" Condition="Exists('TargetFrameworks.props')" />
  <Import Project="..\Version.props" />

  <PropertyGroup>
    <TargetFrameworks Condition="'$(TargetFrameworks)' == ''">netstandard2.0;netstandard1.0;net45;net40;sl5;net35;net35-cf</TargetFrameworks>
    <LangVersion>7.3</LangVersion>
    <Description>A lightweight .NET library for expressive Guard Clauses.</Description>
    <Authors>Kenny Pflug</Authors>
    <Company>Kenny Pflug</Company>
    <Copyright>Copyright © Kenny Pflug 2016 - 2018</Copyright>
    <PackageIconUrl>https://raw.githubusercontent.com/feO2x/Light.GuardClauses/master/Images/light_logo.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/feO2x/Light.GuardClauses</PackageProjectUrl>
    <PackageLicenseUrl>https://raw.githubusercontent.com/feO2x/Light.GuardClauses/master/LICENSE</PackageLicenseUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>Assertions Preconditions GuardClauses DesignByContract DbC</PackageTags>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <PackageReleaseNotes>
Light.GuardClauses 6.0.0
--------------------------------
- Light.GuardClauses is now available as source code distribution with internal types (see Light.GuardClauses.SingleFile.cs in the top-level folder of the repository).
- Added string.Equals extension method which allows comparing strings ignoring the white space. Added corresponding MustBe and MustNotBe overloads for strings.
- added char.IsLetter, char.IsDigit, char.IsLetterOrDigit, and char.IsWhiteSpace extension methods
- fixed some typos in XML comments

Breaking changes:
--------------------------------
- Fixed typo in type: EqualivalentTypeComparer is now called EquivalentTypeComparer
    </PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net35-cf'">
    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <TargetFrameworkProfile>CompactFramework</TargetFrameworkProfile>
    <DefineConstants>NET35_CF;WindowsCE</DefineConstants>
    <DisableImplicitFrameworkReferences>True</DisableImplicitFrameworkReferences>
    <NoStdLib>True</NoStdLib>
    <NoConfig>True</NoConfig>
    <FileAlignment>512</FileAlignment>
    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>
    <GenerateAssemblyFileVersionAttribute>False</GenerateAssemblyFileVersionAttribute>
    <PlatformID>E2BECB1F-8C8C-41ba-B736-9BE7D946A398</PlatformID>
  </PropertyGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'net35-cf'">
    <Reference Include="mscorlib, Version=3.5.0.0, Culture=neutral, PublicKeyToken=969db8053d3322ac" />
    <Reference Include="System, Version=3.5.0.0, Culture=neutral, PublicKeyToken=969db8053d3322ac" />
    <Reference Include="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=969db8053d3322ac" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <Analyzer Include="..\Light.GuardClauses.InternalRoslynAnalyzers\bin\$(Configuration)\netstandard2.0\Light.GuardClauses.InternalRoslynAnalyzers.dll" Condition="Exists('..\Light.GuardClauses.InternalRoslynAnalyzers\bin\$(Configuration)\netstandard2.0\Light.GuardClauses.InternalRoslynAnalyzers.dll')" />
  </ItemGroup>

</Project>
